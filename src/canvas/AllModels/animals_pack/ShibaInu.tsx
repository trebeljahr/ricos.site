/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useRef } from "react";
import { GenericAnimationController } from "src/canvas/Controllers/GenericAnimationController";
import {
  AnimationClip,
  Bone,
  Group,
  MeshStandardMaterial,
  SkinnedMesh,
} from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ShibaInu_1: SkinnedMesh;
    ShibaInu_2: SkinnedMesh;
    ShibaInu_3: SkinnedMesh;
    ShibaInu_4: SkinnedMesh;
    ShibaInu_5: SkinnedMesh;
    ShibaInu_6: SkinnedMesh;
    Body: Bone;
    IKBackLegL: Bone;
    IKFrontLegL: Bone;
    IKBackLegR: Bone;
    IKFrontLegR: Bone;
  };
  materials: {
    Main: MeshStandardMaterial;
    Main_Light: MeshStandardMaterial;
    Black: MeshStandardMaterial;
    Eyes_White: MeshStandardMaterial;
    Eyes_Pupil: MeshStandardMaterial;
    Eyes_Black: MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName =
  | "AnimalArmature|Attack"
  | "AnimalArmature|Death"
  | "AnimalArmature|Eating"
  | "AnimalArmature|Gallop"
  | "AnimalArmature|Gallop_Jump"
  | "AnimalArmature|Idle"
  | "AnimalArmature|Idle_2"
  | "AnimalArmature|Idle_2_HeadLow"
  | "AnimalArmature|Idle_HitReact_Left"
  | "AnimalArmature|Idle_HitReact_Right"
  | "AnimalArmature|Jump_ToIdle"
  | "AnimalArmature|Walk";

interface GLTFAction extends AnimationClip {
  name: ActionName;
}

type Props = JSX.IntrinsicElements["group"] & {
  animationAction?: ActionName;
};

export default function Model(props: Props) {
  const group = useRef<Group>(null!);
  const { nodes, materials, animations } = useGLTF(
    "/3d-assets/glb/animals_pack/ShibaInu.glb"
  ) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <GenericAnimationController
        actions={actions}
        animation={props.animationAction}
      />
      <group name="Root_Scene">
        <group name="RootNode">
          <group
            name="AnimalArmature"
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <primitive object={nodes.Body} />
            <primitive object={nodes.IKBackLegL} />
            <primitive object={nodes.IKFrontLegL} />
            <primitive object={nodes.IKBackLegR} />
            <primitive object={nodes.IKFrontLegR} />
          </group>
          <group
            name="ShibaInu"
            position={[0, 0, 0.06]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <skinnedMesh
              name="ShibaInu_1"
              geometry={nodes.ShibaInu_1.geometry}
              material={materials.Main}
              skeleton={nodes.ShibaInu_1.skeleton}
            />
            <skinnedMesh
              name="ShibaInu_2"
              geometry={nodes.ShibaInu_2.geometry}
              material={materials.Main_Light}
              skeleton={nodes.ShibaInu_2.skeleton}
            />
            <skinnedMesh
              name="ShibaInu_3"
              geometry={nodes.ShibaInu_3.geometry}
              material={materials.Black}
              skeleton={nodes.ShibaInu_3.skeleton}
            />
            <skinnedMesh
              name="ShibaInu_4"
              geometry={nodes.ShibaInu_4.geometry}
              material={materials.Eyes_White}
              skeleton={nodes.ShibaInu_4.skeleton}
            />
            <skinnedMesh
              name="ShibaInu_5"
              geometry={nodes.ShibaInu_5.geometry}
              material={materials.Eyes_Pupil}
              skeleton={nodes.ShibaInu_5.skeleton}
            />
            <skinnedMesh
              name="ShibaInu_6"
              geometry={nodes.ShibaInu_6.geometry}
              material={materials.Eyes_Black}
              skeleton={nodes.ShibaInu_6.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/3d-assets/glb/animals_pack/ShibaInu.glb");
