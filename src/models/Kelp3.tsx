/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: LogNworld (https://sketchfab.com/Logan_velez)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/seaweed-for-my-game-e12401a67c8a4efa81fc3c1d5ce81791
title: SEAWEED For my Game
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube_0: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export function useKelp() {
  const { nodes, materials } = useGLTF('/kelp3.glb') as unknown as GLTFResult

  return { nodes, materials }
}

export function Kelp3(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/kelp3.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[1.48, -6.99, 10.53]} rotation={[0.62, 0.21, 0.19]} />
        <group rotation={[Math.PI / 2, -Math.PI / 2, 0]} scale={[-0.15, 1, 0.36]}>
          <mesh geometry={nodes.Cube_0.geometry} material={materials.Material} />
        </group>
        <group position={[1.74, 6.27, 10.53]} rotation={[-0.9, 0.24, 0.19]} />
      </group>
    </group>
  )
}

useGLTF.preload('/kelp3.glb')
