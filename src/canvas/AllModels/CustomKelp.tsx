/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Mesh, MeshStandardMaterial } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: Mesh;
  };
  materials: {
    Material: MeshStandardMaterial;
  };
};

export function useKelp() {
  const {
    nodes: {
      Cylinder: { geometry },
    },
  } = useGLTF("/3d-assets/CustomKelp.glb") as unknown as GLTFResult;

  return { geometry };
}

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/3d-assets/CustomKelp.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cylinder.geometry} material={materials.Material} />
    </group>
  );
}

useGLTF.preload("/CustomKelp.glb");
