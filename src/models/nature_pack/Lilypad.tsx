/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import {
  GenericInstancedSystem,
  MeshMaterialCombos,
} from "@components/canvas/InstancedMeshSystem/GenericInstancingSystem";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Mesh, MeshStandardMaterial, Vector3 } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Lilypad_1: Mesh;
    Lilypad_2: Mesh;
  };
  materials: {
    Green: MeshStandardMaterial;
    Pink: MeshStandardMaterial;
  };
};

export function InstancedLilypad({ positions }: { positions: Vector3[] }) {
  const meshMaterialCombos: MeshMaterialCombos = [
    ["Lilypad_1", "Green"],
    ["Lilypad_2", "Pink"],
  ];

  return (
    <GenericInstancedSystem
      positions={positions}
      meshMaterialCombos={meshMaterialCombos}
      modelPath={"/3d-assets/glb/nature_pack/Lilypad.glb"}
    />
  );
}

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/3d-assets/glb/nature_pack/Lilypad.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh geometry={nodes.Lilypad_1.geometry} material={materials.Green} />
        <mesh geometry={nodes.Lilypad_2.geometry} material={materials.Pink} />
      </group>
    </group>
  );
}
