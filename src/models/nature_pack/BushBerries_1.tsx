/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { Mesh, MeshStandardMaterial, Vector3 } from "three";
import { GLTF } from "three-stdlib";
import {
  GenericInstancedSystem,
  MeshMaterialCombos,
} from "@components/canvas/Trees/GenericInstancingSystem";

type GLTFResult = GLTF & {
  nodes: {
    BushBerries_1_1: Mesh;
    BushBerries_1_2: Mesh;
  };
  materials: {
    Green: MeshStandardMaterial;
    Berry: MeshStandardMaterial;
  };
};

export function InstancedBushBerries1({ positions }: { positions: Vector3[] }) {
  const meshMaterialCombos: MeshMaterialCombos = [
    ["BushBerries_1_1", "Green"],
    ["BushBerries_1_2", "Berry"],
  ];

  return (
    <GenericInstancedSystem
      positions={positions}
      meshMaterialCombos={meshMaterialCombos}
      modelPath={"/3d-assets/glb/nature_pack/BushBerries_1.glb"}
    />
  );
}

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/3d-assets/glb/nature_pack/BushBerries_1.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          geometry={nodes.BushBerries_1_1.geometry}
          material={materials.Green}
        />
        <mesh
          geometry={nodes.BushBerries_1_2.geometry}
          material={materials.Berry}
        />
      </group>
    </group>
  );
}
